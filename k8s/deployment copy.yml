apiVersion: v1
kind: Secret
metadata:
  name: mysql-admin
  namespace: demo
type: kubernetes.io/basic-auth
stringData:
  username: admin
  password: password
  database: db
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: mysql-data
  namespace: demo
spec:
  accessModes:
    - ReadWriteMany
  storageClassName: managed-nfs-storage
  resources:
    requests:
      storage: 1Gi
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: nginx-conf
  namespace: demo
data:
  nginx.conf: |
    user nginx;
    worker_processes  1;
    events {
      worker_connections  10240;
    }
    http {
      server {
          listen 80;
          server_name _;
          error_log /dev/stdout debug;
          access_log /dev/stdout;
          root /usr/share/nginx/html;
          
          location / {
              root /usr/share/nginx/html;
              try_files $uri $uri/ /;
              index index.html;
          }
          location /api/ {
              proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
              proxy_set_header X-Forwarded-Host $scheme://$host:$server_port;
              proxy_set_header X-Forwarded-Request: $request;
              proxy_set_header X-Forwarded-Server $host;
              proxy_set_header Host $http_host;
              proxy_set_header X-Real-IP $remote_addr;
              proxy_pass http://appsrv:8080;
          }
      }
    }
---
apiVersion: v1
kind: Pod
metadata:
  name: busybox1
  namespace: demo
  labels:
    name: busybox
spec:
  hostname: busybox-1
  subdomain: default-subdomain
  containers:
  - image: busybox:1.28
    command:
      - sleep
      - "3600"
    name: busybox
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: jee
  namespace: demo
  labels:
    app: jee
spec:
  replicas: 1
  selector:
    matchLabels:
      app: jee
  template:
    metadata:
      labels:
        app: jee
    spec:
      containers:
      - name: appsrv
        image: registry.l.aberger.at/caberger/appsrv:latest
        imagePullPolicy: Always
        ports:
          - containerPort: 8080
            name: appsrv
      - name: mysql
        image:  mysql:8
        imagePullPolicy: Always
        ports:
          - containerPort: 3306
            name: mysql
        volumeMounts:
          - mountPath: /var/lib/mysql
            name: mysql-storage
        env:
          - name: MYSQL_USER
            valueFrom:
              secretKeyRef:
                name: mysql-admin
                key: username
          - name: MYSQL_DB
            valueFrom:
              secretKeyRef:
                name: mysql-admin
                key: database
          - name: MYSQL_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-admin
                key: password
          - name: MYSQL_ROOT_PASSWORD
            valueFrom:
              secretKeyRef:
                name: mysql-admin
                key: password
      - name: nginx
        image: nginx:stable
        imagePullPolicy: Always        
        ports:
          - containerPort: 80
            hostPort: 80
            name: http
        volumeMounts:
          - name: nginx-conf
            mountPath: /etc/nginx
            readOnly: true
      volumes:
        - name: mysql-storage
          persistentVolumeClaim:
            claimName: mysql-data
        - name: nginx-conf
          configMap:
            name: nginx-conf # place ConfigMap `nginx-conf` on /etc/nginx
            items:
              - key: nginx.conf
                path: nginx.conf
      imagePullSecrets:
        - name: leocloudcredentials        

